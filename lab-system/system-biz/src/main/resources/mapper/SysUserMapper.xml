<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yiidii.lab.system.mapper.SysUserMapper">
    <resultMap type="cn.yiidii.lab.system.model.dto.SysUserInfoDTO" id="SysUserInfoDTO">
        <id property="id" column="id"/>
        <result property="uuid" column="uuid"/>
        <result property="source" column="source"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <collection property="roles" javaType="java.util.List" resultMap="SysRoleInfoDTO"/>
    </resultMap>

    <resultMap type="cn.yiidii.lab.system.model.dto.SysRoleInfoDTO" id="SysRoleInfoDTO">
        <id property="id" column="role_id"/>
        <result property="code" column="role_code"/>
        <result property="name" column="role_name"/>
    </resultMap>

    <update id="resetPassword">
        update sys_user
        set password = #{password}
        where id = #{id}
    </update>

    <update id="changeStatus">
        update sys_user
        set status = #{status}
        where id = #{id}
    </update>

    <select id="selectUserInfoByUsername" resultMap="SysUserInfoDTO">
        select u.id,
               u.uuid,
               u.source,
               u.username,
               u.nickname,
               u.password,
               u.avatar,
               u.email,
               u.status,
               u.create_time,
               u.created_by,
               u.update_time,
               u.updated_by,
               r.id   AS role_id,
               r.code AS role_code,
               r.name AS role_name
        from sys_user u
                 left join sys_role_user ru on ru.user_id = u.id
                 left join sys_role r on r.id = ru.role_id
        where u.username = #{username}
    </select>


    <select id="selectUserInfoBySourceAndUUID" resultMap="SysUserInfoDTO">
        select u.id,
               u.uuid,
               u.source,
               u.username,
               u.nickname,
               u.password,
               u.avatar,
               u.email,
               u.status,
               u.create_time,
               u.created_by,
               u.update_time,
               u.updated_by,
               r.id   AS role_id,
               r.code AS role_code,
               r.name AS role_name
        from sys_user u
                 left join sys_role_user ru on ru.user_id = u.id
                 left join sys_role r on r.id = ru.role_id
        where u.source = #{source}
          AND u.uuid = #{uuid}
    </select>

    <select id="selectUserInfoByUid" resultMap="SysUserInfoDTO">
        select u.id,
               u.uuid,
               u.source,
               u.username,
               u.nickname,
               u.password,
               u.avatar,
               u.email,
               u.status,
               u.create_time,
               u.created_by,
               u.update_time,
               u.updated_by,
               r.id,
               r.code,
               r.name,
               r.status
        from sys_user u
                 left join sys_role_user ru on ru.user_id = u.id
                 left join sys_role r on r.id = ru.role_id
        where u.id = #{uid}
    </select>

    <select id="selectPageUserList" resultType="cn.yiidii.lab.system.model.entity.SysUser">
        select u.id,
               u.uuid,
               u.source,
               u.username,
               u.nickname,
               u.password,
               u.avatar,
               u.email,
               u.status,
               u.create_time,
               u.created_by,
               u.update_time,
               u.updated_by
        from sys_user u
            ${ew.getCustomSqlSegment}
    </select>
</mapper>
